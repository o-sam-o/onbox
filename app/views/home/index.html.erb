<% content_for :head do %>
  <link type="text/css" rel="stylesheet" href="<%= ONBOX_CONFIG[:yui_path] %>/carousel/assets/skins/sam/carousel.css">
 
  <script src="<%= ONBOX_CONFIG[:yui_path] %>/element/element-min.js"></script>
  <script src="<%= ONBOX_CONFIG[:yui_path] %>/carousel/carousel-min.js"></script>
  <script src="<%= ONBOX_CONFIG[:yui_path] %>/animation/animation-min.js"></script>

  <script type="text/javascript" src="<%= ONBOX_CONFIG[:yui_path] %>/history/history-min.js"></script> 

<% end %>

<% content_for :title do %>
  On Box: Home
<% end %>

<style type="text/css">
	.yui-skin-sam .yui-carousel-item-loading {
		text-indent: 0px;
	}

	/* Always be sure to give your carousel items a width and a height */
	.yui-carousel-element li {
	    width: 160px;
	    height: 205px;
		margin: 5px;
	}

	.yui-carousel-element .yui-carousel-item-selected {
	    border:1px solid #CCCCCC;
	    width: 160px;
	    height: 205px;
		margin: 5px;	
	}

	.yui-carousel-content {
		background-color: white;
	}
</style>

<h1>Your <%= 'Unwatched' if @unwatched %> <%= @genres.collect { |g| g.titleize }.join(' and ') %> Videos</h1>

<% unless @video_contents.empty? %>
	<div id="contentContainer">
		<ol>
			<% @video_contents.each do |video_content| %>
				<li>
					<%= render :partial => "carousel_item", :object => video_content %>
				</li>
			<% end %>
		</ol>
	</div>
    <div id="videoCountWrapper">
        <%= @video_content_count %> videos
    </div>

	<script>
		var carWidth = <%= HomeController::CAROUSEL_WIDTH %>;
		var carHeight = <%= HomeController::CAROUSEL_HEIGHT %>;
		var carousel = null;
	
		YAHOO.util.Event.onDOMReady(function (ev) {
		    var carouselState = YAHOO.util.History.getBookmarkedState("carouselState");
		    var initialCarouselState = carouselState || "0";
			
			YAHOO.util.History.register("carouselState", initialCarouselState, function (state) {
				setCarouselFirstVisible(parseInt(state));
		    });
			
			YAHOO.util.History.onReady(function () {
		        var currentState = YAHOO.util.History.getCurrentState("carouselState");
				YAHOO.log("Init carousel with state: " + currentState);				
		        initCarousel(parseInt(currentState));
		    });
			
		    // Initialize the browser history management library.
		    try {
		        YAHOO.util.History.initialize("yui-history-field", "yui-history-iframe");
		    } catch (e) {
		        YAHOO.log("Unable to init carousel history: " + e);
		        initCarousel(0);
		    }
		});
		
		function initCarousel(firstVisible) {
		    carousel = new YAHOO.widget.Carousel("contentContainer", {
		        animation: { speed: 0.5, effect: YAHOO.util.Easing.easeOut },
		        numVisible: [carWidth,carHeight],
				numItems: <%= @video_content_count %>
		    });
		
			carousel.on("loadItems", loadCarouselItems);
			carousel.on("pageChange", recordCarouselHistory);
		    carousel.render();
			carousel.show();
			setCarouselFirstVisible(firstVisible);   			
		}
		
		function loadCarouselItems(o) {
			var offset = 0;
			var pageSize = carWidth*carHeight;
	        if(o){
	            YAHOO.log('Num: ' + o.num + " First: " + o.first + " Last: " + o.last);   
	            offset = o.first;
				pageSize = o.num;
	        }

			new Ajax.Request("<%= home_carousel_path params[:criteria] %>", { 
				method:'get', 
				parameters: {'offset': offset, 'page_size': pageSize},
				evalJS:'force' 
			});		
		}
	
		function addCarouselItem(item){
			carousel.addItem(item);
		}
		
		function recordCarouselHistory(e){
	        var newState = carousel.get('firstVisible');
	        try {
	            var currentState = YAHOO.util.History.getCurrentState("carouselState");
				//YAHOO.log("Carousel new: " + newState + " current: " + currentState);
	            if (newState != currentState) {
	                YAHOO.util.History.navigate("carouselState", "" + newState);
	            }
	        } catch (e) {
	            YAHOO.log("Error recording carousel history: " + e);
	        }			
		}
		
		//Sets the first visible without any animiation
		function setCarouselFirstVisible(state){
			var animation = carousel.get('animation');
			carousel.set('animation', {speed: 0, effect: null});
			carousel.set("firstVisible", state);
			carousel.set('animation', animation);
		}
	</script>
<% else %>
	<div>
		No videos.
	</div>
<% end %>
<iframe id="yui-history-iframe" src="/history"></iframe> 
<input id="yui-history-field" type="hidden">